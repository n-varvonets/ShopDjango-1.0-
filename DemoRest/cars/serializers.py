"""сериализатор - это связующее зваенно(прослойка) между url(откуда пришел запрос на данные, после того как он во вьюхер
дернул ручку ручку(handler)) и бд....  и нужен он для того что бы указать с какой именно моделью свзать данные запрос.

Пример. Юзер через GET запросил данные и идет сначала в сериализатор и говорит... отдай мне данные по такому ключу
или прочто данные сабака гани... и серилиазтор берет данные с бд и преобразует их в json.
т.е. это по сути конвертация данных из базы в json.

а когда данные через POST и мы хотим их сохранить, он проверят что все данные такого же типа, которые ожидает сама
модель, не превышают длину. т.е. из json  преобразует их в запись в бд"""
from rest_framework import serializers
from cars.models import Car


class CarDetailSerializer(serializers.ModelSerializer):  #  мой пример с джанги https://github.com/n-varvonets/ShopDjango-1.0-/blob/master/mainapp/forms.py
    #  уберем указывание пользователя при создании, и назначеим по дефолту текущего http://i.imgur.com/g4Si4Uy.png
    user = serializers.HiddenField(default=serializers.CurrentUserDefault())  # http://i.imgur.com/g4Si4Uy.png
    #  как мы авторизованны, при сохранении выдаст ошибку http://i.imgur.com/sfmhZ9l.png , потому что не создан инстанс
    # пользователя, поэтмоу перейдем в урлс и подклюим билдиновскую рефстфул аутентификацию(то что нам дается в коробке)


    # дальше стандартная загатовка в Джанге
    class Meta:
        # указали модель к какторой этот сериализатор будет привязан(тоже самое как модел форм в джанго)
        model = Car
        #  можно не все поля указывать, котрые будут использоваться(отображаться), но таким образом укажем все
        fields = '__all__'


#  если в дитейле(т.е при создании) мы хотим показывать все поля, то при отображении(ListAPIView) выведим обределенные
class CarListSerializer(serializers.ModelSerializer):
    class Meta:
        model = Car
        fields = ('id', 'vin', 'user')





